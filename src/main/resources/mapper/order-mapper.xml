<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lqs.dao.OrderDao">
    <sql id="params">
        id,
        user_id userId,
        user_info userInfo,
        create_time createTime,
        end_time endTime,
        total_price totalPrice,
        pay_time payTime,
        `status`
    </sql>
    <sql id="params2">
        id,
        order_id orderId,
        goods_id goodsId,
        `number`,
        goods_name goodsName,
        goods_price goodsPrice,
        category_code categoryCode,
        type_code typeCode,
        avatar
    </sql>
    <insert id="create" parameterType="cn.lqs.order.bean.Order">
        insert into `order`(id, user_id, user_info, create_time, end_time, total_price, pay_time)
        value (#{id},#{userId},#{userInfo},#{createTime},#{endTime},#{totalPrice},#{payTime})
    </insert>
    <insert id="createOrderGoods" parameterType="cn.lqs.order.bean.OrderGoods">
        insert into order_goods(id, order_id, goods_id, number, goods_name, goods_price, category_code, type_code,avatar)
        value (#{id},#{orderId},#{goodsId},#{number},#{goodsName},#{goodsPrice},#{categoryCode},#{typeCode},#{avatar})
    </insert>
    <select id="selectByUserId" parameterType="string"
            resultType="cn.lqs.order.bean.Order">
        select <include refid="params"></include>
        from `order` where user_id  = #{id} and is_delete = 0 order by create_time desc
    </select>
    <select id="queryById" parameterType="string" resultType="cn.lqs.order.bean.Order">
        select <include refid="params"></include>
        from `order` where id = #{string};
    </select>
    <select id="selectGoodsByOrderId" parameterType="string" resultType="cn.lqs.order.bean.OrderGoods">
        select <include refid="params2"></include>
        from order_goods where order_id = #{string}
    </select>

    <update id="setPayed">
        update `order` set status = 1,pay_time = #{payTime} where id = #{id}
    </update>
    <update id="setShip" parameterType="string">
        update `order` set status = 2 where id = #{string}
    </update>
    <update id="setFinish">
        update `order` set end_time = #{endTime},status = 3 where id = #{id}
    </update>
    <update id="remove" parameterType="string">
        update `order` set is_delete = 1 where id = #{string};
    </update>
    <update id="setUrge" parameterType="string">
        update `order` set urge = urge + 1 where id = #{string}
    </update>
    <select id="queryList"  parameterType="cn.lqs.order.bean.OrderVo" resultType="cn.lqs.order.bean.Order">
        select <include refid="params"></include>
        from `order`
        where 1=1
        <if test="goodsOrder.status!=null and goodsOrder.status &lt; 4">
            and `status` = #{goodsOrder.status}
        </if>
        <if test="startTime!=null">
            and create_time &gt;= #{startTime}
        </if>
        <if test="endTime!=null">
            and create_time &lt;= #{endTime}
        </if>
        <if test="searchId!=null and searchId!=''">
            and id = #{searchId}
        </if>
        order by create_time desc
        <if test="pagingFlag==true">
            limit #{startIndex},#{rowCount}
        </if>
    </select>
    <select id="countModelNum" resultType="integer">
        select count(1)
        from `order` where 1=1
        <if test="goodsOrder.status!=null and goodsOrder.status &lt; 4">
            and `status` = #{goodsOrder.status}
        </if>
        <if test="startTime!=null">
            and create_time &gt;= #{startTime}
        </if>
        <if test="endTime!=null">
            and create_time &lt;= #{endTime}
        </if>
        <if test="searchId!=null and searchId!=''">
            and id = #{searchId}
        </if>
    </select>
    <update id="updateAddress"  parameterType="cn.lqs.order.bean.Order">
        update `order` set user_info = #{userInfo} where id = #{id}
    </update>
    <select id="queryNoShipOrder" resultType="integer">
        select count(1)
        from `order` where `status` = 1;
    </select>


</mapper>