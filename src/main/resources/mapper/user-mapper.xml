<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lqs.dao.UserDao">
    <sql id="params">
         id,
        account,
        avatar,
        sex,
        phone,
        email,
        create_time createTime,
        token,
        token_time tokenTime,
        low_price lowPrice,
        solid,
        fresh
    </sql>
    <select id="queryList" resultType="cn.lqs.user.bean.User">
        select <include refid="params"></include>
        from user where 1=1
        <if test="user.account!=null and user.account!=''">
             and account like concat(#{user.account},'%')
        </if>
        <if test="user.sex!=null">
            and sex = #{user.sex}
        </if>
        <if test="user.phone!=null and user.phone!=''">
            and phone = #{user.phone}
        </if>
        <if test="user.email!=null and user.email!=''">
            and email = #{user.email}
        </if>
        <if test="pagingFlag==true">
            limit #{startIndex},#{rowCount}
        </if>
    </select>
    <select id="countModelNum" resultType="integer">
        select count(1)
        from user where 1=1
        <if test="user.account!=null and user.account!=''">
            and account like concat(#{user.account},'%')
        </if>
        <if test="user.sex!=null">
            and sex = #{user.sex}
        </if>
        <if test="user.phone!=null and user.phone!=''">
            and phone like concat(#{user.phone},'%')
        </if>
        <if test="user.email!=null and user.email!=''">
            and email like concat(#{user.email},'%')
        </if>
    </select>
    <select id="queryById" resultType="cn.lqs.user.bean.User">
        select
        <include refid="params"></include>
        from user
        where id = #{id}
    </select>
    <select id="verifyAccount" resultType="integer" parameterType="string">
        select count(1) from user where account = #{account}
    </select>
    <select id="verifyEmail" resultType="integer" parameterType="string">
        select count(1) from user where email = #{email}
    </select>
    <select id="verifyLogin" resultType="cn.lqs.user.bean.User">
        select <include refid="params"></include> from user where
        (email = #{account}
                             or account = #{account}
                             or phone = #{account})
                              and password = #{password}
    </select>
    <select id="selectIdByMail" parameterType="string" resultType="string">
        select id from user where email = #{email}
    </select>
    <insert id="register" parameterType="cn.lqs.user.bean.User">
        insert into user(id,account,password,avatar,sex,phone,email,create_time)
         value (#{id},#{account},#{password},#{avatar},#{sex},#{phone},#{email},#{createTime})
    </insert>
    <update id="resetPassword" parameterType="string">
        update user set password = 123
        where id = #{id}
    </update>
    <select id="updatePassword" parameterType="cn.lqs.user.bean.User">
        update user set password = #{password}
        where id = #{id}
    </select>
    <update id="setTokenById" parameterType="cn.lqs.user.bean.User">
        update user set token = #{token},token_time = #{tokenTime} where id = #{id}
    </update>
    <delete id="remove" parameterType="string">
        delete from user where id=#{id}
    </delete>
    <update id="modify" parameterType="cn.lqs.user.bean.User">
        update user set sex = #{sex},phone = #{phone} where id=#{id}
    </update>
    <select id="verifyPwdIsTrue" parameterType="cn.lqs.user.bean.User" resultType="integer">
        select count(1) from user where id = #{id} and password = #{password}
    </select>
    <select id="updatePwd" parameterType="cn.lqs.user.bean.User">
        update user set password = #{password} where id = #{id}
    </select>
    <update id="addLowPrice" parameterType="string">
        update user set low_price = low_price + 1 where id = #{string}
    </update>
    <update id="addSolid" parameterType="string">
        update user set solid = solid + 1 where id = #{string}
    </update>
    <update id="addFresh" parameterType="string">
        update user set fresh = fresh + 1 where id = #{string}
    </update>
</mapper>